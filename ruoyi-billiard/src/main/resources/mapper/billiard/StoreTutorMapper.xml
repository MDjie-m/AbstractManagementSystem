<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.billiard.mapper.StoreTutorMapper">



    <sql id="selectStoreTutorVo">
        select a.* ,b.store_name,c.user_name,e.price
        from t_store_tutor a  left join  t_store b on a.store_id=b.store_id
                             left join sys_user c on a.login_user_id=c.user_id
        left join t_tutor_price e on e.level=a.level and a.store_id=e.store_id
    </sql>

    <select id="selectStoreTutorList" parameterType="StoreTutor" resultType="StoreTutor">
        <include refid="selectStoreTutorVo"/>
        <where>
            <if test="realName != null  and realName != ''">and real_name like concat('%', #{realName}, '%')</if>
            <if test="mobile != null  and mobile != ''">and mobile = #{mobile}</if>
            <if test="userImg != null  and userImg != ''">and user_img = #{userImg}</if>
            <if test="sex != null  and sex != ''">and sex = #{sex}</if>
            <if test="level != null ">and level = #{level}</if>
            <if test="status != null ">and a.status = #{status}</if>
            <if test="loginUserId != null ">and login_user_id = #{loginUserId}</if>
            <if test="storeId != null ">and a.store_id = #{storeId}</if>
            <if test="workStatus != null ">and a.work_status = #{workStatus}</if>

        </where>
    </select>

    <select id="selectStoreTutorByStoreTutorId" parameterType="Long" resultType="StoreTutor">
        <include refid="selectStoreTutorVo"/>
        where store_tutor_id = #{storeTutorId}
    </select>
    <select id="queryCountGroupByWorkStatus" resultType="com.ruoyi.common.core.domain.model.KeyValueVo">

        select count(1)                                                                                   as value,
               status                                                                                     as `key`,
               case status when 0 then '空闲' when 1 then '计费中' when 2 then '已暂停' else '已停止' end as label
        from t_store_tutor where status=0 and   store_id=#{storeId}
        group by work_status
        order by work_status;
    </select>

</mapper>