<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.billiard.mapper.StoreScheduleMapper">

    <resultMap type="StoreSchedule" id="StoreScheduleResult">
        <result property="storeScheduleId"    column="store_schedule_id"    />
        <result property="storeId"    column="store_id"    />
        <result property="startTime"    column="start_time"    />
        <result property="endTime"    column="end_time"    />
        <result property="startTimeOffsetDay"    column="start_time_offset_day"    />
        <result property="endTimeOffsetDay"    column="end_time_offset_day"    />
        <result property="day"    column="day"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="createById"    column="create_by_id"    />
        <result property="updateById"    column="update_by_id"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectStoreScheduleVo">
        select store_schedule_id, store_id, start_time, end_time, start_time_offset_day, end_time_offset_day, day, create_by, create_time, update_by, update_time, create_by_id, update_by_id, remark from t_store_schedule
    </sql>

    <select id="selectStoreScheduleList" parameterType="StoreSchedule" resultMap="StoreScheduleResult">
        <include refid="selectStoreScheduleVo"/>
        <where>
            <if test="params.beginDay != null and params.beginDay != '' and params.endDay != null and params.endDay != ''"> and day between #{params.beginDay} and #{params.endDay}</if>
        </where>
        ORDER BY day DESC
    </select>

    <select id="selectStoreScheduleByStoreScheduleId" parameterType="Long" resultMap="StoreScheduleResult">
        <include refid="selectStoreScheduleVo"/>
        where store_schedule_id = #{storeScheduleId}
    </select>

    <insert id="insertStoreSchedule" parameterType="StoreSchedule">
        insert into t_store_schedule
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="storeScheduleId != null">store_schedule_id,</if>
            <if test="storeId != null">store_id,</if>
            <if test="startTime != null">start_time,</if>
            <if test="endTime != null">end_time,</if>
            <if test="startTimeOffsetDay != null">start_time_offset_day,</if>
            <if test="endTimeOffsetDay != null">end_time_offset_day,</if>
            <if test="day != null">day,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="createById != null">create_by_id,</if>
            <if test="updateById != null">update_by_id,</if>
            <if test="remark != null">remark,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="storeScheduleId != null">#{storeScheduleId},</if>
            <if test="storeId != null">#{storeId},</if>
            <if test="startTime != null">#{startTime},</if>
            <if test="endTime != null">#{endTime},</if>
            <if test="startTimeOffsetDay != null">#{startTimeOffsetDay},</if>
            <if test="endTimeOffsetDay != null">#{endTimeOffsetDay},</if>
            <if test="day != null">#{day},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="createById != null">#{createById},</if>
            <if test="updateById != null">#{updateById},</if>
            <if test="remark != null">#{remark},</if>
        </trim>
    </insert>

    <update id="updateStoreSchedule" parameterType="StoreSchedule">
        update t_store_schedule
        <trim prefix="SET" suffixOverrides=",">
            <if test="storeId != null">store_id = #{storeId},</if>
            <if test="startTime != null">start_time = #{startTime},</if>
            <if test="endTime != null">end_time = #{endTime},</if>
            <if test="startTimeOffsetDay != null">start_time_offset_day = #{startTimeOffsetDay},</if>
            <if test="endTimeOffsetDay != null">end_time_offset_day = #{endTimeOffsetDay},</if>
            <if test="day != null">day = #{day},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="createById != null">create_by_id = #{createById},</if>
            <if test="updateById != null">update_by_id = #{updateById},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where store_schedule_id = #{storeScheduleId}
    </update>

    <delete id="deleteStoreScheduleByStoreScheduleId" parameterType="Long">
        delete from t_store_schedule where store_schedule_id = #{storeScheduleId}
    </delete>

    <delete id="deleteStoreScheduleByStoreScheduleIds" parameterType="String">
        delete from t_store_schedule where store_schedule_id in
        <foreach item="storeScheduleId" collection="array" open="(" separator="," close=")">
            #{storeScheduleId}
        </foreach>
    </delete>
</mapper>