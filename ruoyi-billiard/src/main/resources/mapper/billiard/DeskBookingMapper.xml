<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.billiard.mapper.DeskBookingMapper">


    <sql id="selectDeskBookingVo">
        select a.*, concat(b.desk_name, '(', b.desk_num, ')') as desk_title
        from t_desk_booking a
                 left join t_store_desk b on a.desk_id = b.desk_id


    </sql>

    <select id="selectDeskBookingList" parameterType="DeskBooking" resultType="DeskBooking">
        <include refid="selectDeskBookingVo"/>
        <where>
            <if test="storeId != null "> and  a.store_id = #{storeId}</if>
            <if test="startTime != null "> and  a.start_time >= #{startTime}</if>
            <if test="endTime != null "> and  a.end_time  <![CDATA[<=]]>  #{endTime}</if>
            <if test="deskId != null "> and  a.desk_id = #{deskId}</if>
            <if test="bookingUserName != null  and bookingUserName != ''"> and  a.booking_user_name like concat('%', #{bookingUserName}, '%')</if>
            <if test="bookingUserMobile != null  and bookingUserMobile != ''"> and  a.booking_user_mobile = #{bookingUserMobile}</if>
            <if test="status != null "> and  a.status = #{status}</if>
            <if test="keyword != null  and keyword != ''"> and  (
                a.booking_user_name like concat('%', #{keyword}, '%')
                or
                a.booking_user_mobile like concat('%', #{keyword}, '%')
                )
             </if>

        </where>
        order by start_time  asc
    </select>
    
    <select id="selectDeskBookingByDeskBookingId" parameterType="Long" resultType="DeskBooking">
        <include refid="selectDeskBookingVo"/>
        where desk_booking_id = #{deskBookingId}
    </select>
    <select id="selectBookingCount" resultType="com.ruoyi.common.core.domain.model.KeyValueVo">
        select count(1) as value,desk_id as `key`
        from t_desk_booking where status in (0,1)
        and (
        start_time between #{startTime} and #{endTime}
        or end_time between #{startTime} and #{endTime}
        )
        and desk_id in
        <foreach item="id" collection="deskIds" open="(" separator="," close=")">
            #{id}
        </foreach>

        group by desk_id;
    </select>


    <delete id="deleteDeskBookingByDeskBookingId" parameterType="Long">
        delete from t_desk_booking where desk_booking_id = #{deskBookingId}
    </delete>

    <delete id="deleteDeskBookingByDeskBookingIds" parameterType="String">
        delete from t_desk_booking where desk_booking_id in 
        <foreach item="deskBookingId" collection="array" open="(" separator="," close=")">
            #{deskBookingId}
        </foreach>
    </delete>
</mapper>