<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.billiard.mapper.StoreMapper">

    <resultMap type="Store" id="StoreResult">
        <result property="storeId"    column="store_id"    />
        <result property="storeName"    column="store_name"    />
        <result property="storeAddress"    column="store_address"    />
        <result property="storeImg"    column="store_img"    />
        <result property="status"    column="status"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
        <result property="createById" column="create_by_id"/>
        <result property="updateById" column="update_by_id"/>
    </resultMap>

    <sql id="selectStoreVo">
        select store_id,
               store_name,
               store_address,
               store_img,
               status,
               del_flag,
               create_by,
               create_time,
               update_by,
               update_time,
               remark,
               update_by_id,
               create_by_id
        from t_store
    </sql>

    <select id="selectStoreList" parameterType="Store" resultMap="StoreResult">
        <include refid="selectStoreVo"/>
        <where>
            <if test="storeName != null  and storeName != ''"> and store_name like concat('%', #{storeName}, '%')</if>
            <if test="storeAddress != null  and storeAddress != ''"> and store_address = #{storeAddress}</if>
            <if test="storeImg != null  and storeImg != ''"> and store_img = #{storeImg}</if>
            <if test="status != null "> and status = #{status}</if>
        </where>
    </select>

    <select id="selectStoreByStoreId" parameterType="Long" resultMap="StoreResult">
        <include refid="selectStoreVo"/>
        where store_id = #{storeId}
    </select>
    <select id="queryOrderTotal" resultType="com.ruoyi.common.core.domain.model.Tuple">
        select ifnull(sum(${amount}),0.00) as value,count(1) as value1
        from t_order    ${ew.customSqlSegment}

    </select>
    <select id="queryOrderTotalGroupBy" resultType="com.ruoyi.common.core.domain.model.Tuple3">
        select  ifnull(sum(${amount}) ,0.00) as value,count(1) as value1,${groupColumn} as value2
        from t_order    ${ew.customSqlSegment}
    </select>


    <insert id="insertStore" parameterType="Store">
        insert into t_store
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="storeId != null">store_id,</if>
            <if test="storeName != null and storeName != ''">store_name,</if>
            <if test="storeAddress != null and storeAddress != ''">store_address,</if>
            <if test="storeImg != null and storeImg != ''">store_img,</if>
            <if test="status != null">status,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
            <if test="updateById != null">update_by_id,</if>
            <if test="createById != null">create_by_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="storeId != null">#{storeId},</if>
            <if test="storeName != null and storeName != ''">#{storeName},</if>
            <if test="storeAddress != null and storeAddress != ''">#{storeAddress},</if>
            <if test="storeImg != null and storeImg != ''">#{storeImg},</if>
            <if test="status != null">#{status},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
            <if test="updateById != null">#{updateById},</if>
            <if test="createById != null">#{createById},</if>
        </trim>
    </insert>

    <update id="updateStore" parameterType="Store">
        update t_store
        <trim prefix="SET" suffixOverrides=",">
            <if test="storeName != null and storeName != ''">store_name = #{storeName},</if>
            <if test="storeAddress != null and storeAddress != ''">store_address = #{storeAddress},</if>
            <if test="storeImg != null and storeImg != ''">store_img = #{storeImg},</if>
            <if test="status != null">status = #{status},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="updateById != null">update_by_id =#{updateById},</if>
            <if test="createById != null">create_by_id =#{createById},</if>
        </trim>
        where store_id = #{storeId}
    </update>

    <delete id="deleteStoreByStoreId" parameterType="Long">
        delete from t_store where store_id = #{storeId}
    </delete>

    <delete id="deleteStoreByStoreIds" parameterType="String">
        delete from t_store where store_id in
        <foreach item="storeId" collection="array" open="(" separator="," close=")">
            #{storeId}
        </foreach>
    </delete>
</mapper>