<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.billiard.mapper.OrderMapper">
    


    <sql id="selectOrderVo">
        select  *
        from t_order a
    </sql>

    <select id="selectOrderList" parameterType="Order" resultType="Order">

        <include refid="selectOrderVo"/>
        <where>
            <if test="deskId != null "> and EXISTS(select b.order_id from t_order_desk_time b
             where  b.order_id=a.order_id and  b.desk_id =#{deskId}) </if>
            <if test="orderNo != null  and orderNo != ''"> and order_no = #{orderNo}</if>
            <if test="storeId != null "> and store_id = #{storeId}</if>
            <if test="orderType != null "> and order_type = #{orderType}</if>
            <if test="status != null "> and status = #{status}</if>
            <if test="payType != null "> and pay_type = #{payType}</if>
            <if test="createStart != null and createEnd!=null "> and create_time  between   #{createStart} and   #{createEnd}  </if>
        </where>
    </select>
    
    <select id="selectOrderByOrderId" parameterType="Long" resultType="com.ruoyi.billiard.domain.Order">
        <include refid="selectOrderVo"/>
        where order_id = #{orderId}
    </select>
    <select id="selectCurrentRelationOrder" resultType="com.ruoyi.billiard.domain.Order">
        select a.*,b.desk_name,b.desk_num
        from t_order a join  t_store_desk b on a.order_id=b.current_order_id
        where b.desk_id=#{deskId}

    </select>
    <select id="selectMemberRechargeOrderList" resultType="OrderRecharge">

        select a.*,b.order_no
        from   t_order_recharge a join  t_order b   on a.order_id=b.order_id
        ${ew.customSqlSegment}
    </select>
    <select id="selectDeductOrderList" resultType="com.ruoyi.billiard.domain.OrderMemberDeduct">
        select a.*,b.order_no
        from   t_order_recharge a join  t_order b   on a.order_id=b.order_id
        ${ew.customSqlSegment}
    </select>


    <delete id="deleteOrderByOrderId" parameterType="Long">
        delete from t_order where order_id = #{orderId}
    </delete>

    <delete id="deleteOrderByOrderIds" parameterType="String">
        delete from t_order where order_id in 
        <foreach item="orderId" collection="array" open="(" separator="," close=")">
            #{orderId}
        </foreach>
    </delete>
</mapper>