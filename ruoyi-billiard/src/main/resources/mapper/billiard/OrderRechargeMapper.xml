<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.billiard.mapper.OrderRechargeMapper">
    

    <sql id="selectOrderRechargeVo">
        select  *
        from t_order_recharge
    </sql>

    <select id="selectOrderRechargeList" parameterType="OrderRecharge" resultType="OrderRecharge">
        <include refid="selectOrderRechargeVo"/>
        <where>  
            <if test="orderId != null "> and order_id = #{orderId}</if>
            <if test="memberId != null "> and member_id = #{memberId}</if>
            <if test="rechargeAmount != null "> and recharge_amount = #{rechargeAmount}</if>
            <if test="giveAmount != null "> and give_amount = #{giveAmount}</if>
            <if test="totalAmount != null "> and total_amount = #{totalAmount}</if>
            <if test="createById != null "> and create_by_id = #{createById}</if>
            <if test="updateById != null "> and update_by_id = #{updateById}</if>
        </where>
    </select>
    
    <select id="selectOrderRechargeByOrderRechargeId" parameterType="Long" resultType="OrderRecharge">
        <include refid="selectOrderRechargeVo"/>
        where order_recharge_id = #{orderRechargeId}
    </select>


    <delete id="deleteOrderRechargeByOrderRechargeId" parameterType="Long">
        delete from t_order_recharge where order_recharge_id = #{orderRechargeId}
    </delete>

    <delete id="deleteOrderRechargeByOrderRechargeIds" parameterType="String">
        delete from t_order_recharge where order_recharge_id in 
        <foreach item="orderRechargeId" collection="array" open="(" separator="," close=")">
            #{orderRechargeId}
        </foreach>
    </delete>

    <select id="selectOrderGoodsStatistics" resultType="java.util.Map">
        SELECT COUNT(1) as count, COALESCE(SUM(a.total_amount), 0) as totalAmount
        FROM t_order_recharge a INNER JOIN t_order b ON a.order_id = b.order_id
        <where>
            <if test="status != null "> and b.status = #{status}</if>
            <if test="storeId != null"> and b.store_id = #{storeId}</if>
            <if test="startTime != null and endTime != null"> and b.create_time between #{startTime} and #{endTime}</if>
        </where>
        ORDER BY b.create_time DESC
    </select>
</mapper>