<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.SysUserMapper">

    <resultMap type="SysUser" id="SysUserResult">
        <id     property="userId"       column="user_id"      />
        <result property="deptId"       column="dept_id"      />
        <result property="userName"     column="user_name"    />
        <result property="nickName"     column="nick_name"    />
        <result property="email"        column="email"        />
        <result property="phonenumber"  column="phonenumber"  />
        <result property="sex"          column="sex"          />
        <result property="avatar"       column="avatar"       />
        <result property="password"     column="password"     />
        <result property="status"       column="status"       />
        <result property="delFlag"      column="del_flag"     />
        <result property="loginIp"      column="login_ip"     />
        <result property="loginDate"    column="login_date"   />
        <result property="createBy"     column="create_by"    />
        <result property="createTime"   column="create_time"  />
        <result property="updateBy"     column="update_by"    />
        <result property="updateTime"   column="update_time"  />
        <result property="remark"       column="remark"       />
        <result property="userType"     column="user_type"       />
		<result property="subAccountFlag"   column="sub_account_flag"  />
		<result property="supplierId"     column="supplier_id"    />
		<result property="userDetailsId"   column="user_details_id"  />
		<result property="expirationDate"       column="expiration_date"       />
		<result property="parentUserId"     column="parent_user_id"       />
		<result property="position"     column="position"       />
        <association property="dept"    javaType="SysDept"         resultMap="deptResult" />
		<association property="userDetail"    javaType="SysUserDetail"         resultMap="detailResult" />
        <collection  property="roles"   javaType="java.util.List"  resultMap="RoleResult" />
    </resultMap>

	<resultMap id="detailResult" type="sysUserDetail">
		<id property="userDetailsId"   column="user_details_id"   />
		<result property="userNameCn"    column="user_name_cn"     />
		<result property="userNameEn"  column="user_name_en"   />
		<result property="userNameOwn"  column="user_name_own"   />
		<result property="country" column="country"   />
		<result property="province"  column="province"   />
		<result property="cityArea" column="city_area"   />
		<result property="detailedAddress"  column="detailed_address"   />
		<result property="principalProductType"    column="principal_product_type"      />
		<result property="principalProduct"    column="principal_product" />
		<result property="companyCid"    column="company_cid"      />
		<result property="identificationNumber"    column="identification_number" />
	</resultMap>

    <resultMap id="deptResult" type="SysDept">
        <id     property="deptId"    column="dept_id"     />
        <result property="parentId"  column="parent_id"   />
        <result property="deptName"  column="dept_name"   />
        <result property="ancestors" column="ancestors"   />
        <result property="orderNum"  column="order_num"   />
        <result property="leader"    column="leader"      />
        <result property="status"    column="dept_status" />
    </resultMap>
	
    <resultMap id="RoleResult" type="SysRole">
        <id     property="roleId"       column="role_id"        />
        <result property="roleName"     column="role_name"      />
        <result property="roleKey"      column="role_key"       />
        <result property="roleSort"     column="role_sort"      />
        <result property="dataScope"    column="data_scope"     />
        <result property="status"       column="role_status"    />
    </resultMap>
	
	<sql id="selectUserVo">
        select u.user_id, u.dept_id, u.user_name, u.nick_name, u.email, u.avatar, u.phonenumber, u.password, u.sex, u.status, u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark,
			   u.sub_account_flag  , u.supplier_id  , u.user_details_id  , u.expiration_date  , u.parent_user_id , u.position,
        d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.status as dept_status,
        r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status as role_status,
	 ud.user_name_cn,ud.user_name_en,ud.user_name_own,ud.country,ud.province,ud.city_area,ud.detailed_address,ud.principal_product_type,ud.principal_product,ud.company_cid,ud.identification_number,ud.remark
        from sys_user u
		    left join sys_dept d on u.dept_id = d.dept_id
		    left join sys_user_role ur on u.user_id = ur.user_id
		    left join sys_role r on r.role_id = ur.role_id
            left join sys_user_detail  ud on ud.user_details_id = u.user_details_id
    </sql>
    
    <select id="selectUserList" parameterType="SysUser"
			resultMap="SysUserResult" >
		select u.user_id  , u.dept_id , u.nick_name , u.user_name , u.email, u.avatar, u.phonenumber, u.sex, u.status, u.del_flag , u.login_ip , u.login_date , u.create_by , u.create_time , u.remark,
		       u.sub_account_flag  , u.supplier_id  , u.user_details_id  , u.expiration_date  ,u.parent_user_id , u.position,
		       d.dept_name , d.leader,
		ud.user_name_cn  , ud.user_name_en  , ud.user_name_own , ud.country , ud.province , ud.city_area , ud.detailed_address ,
		ud.principal_product_type   , ud.principal_product   , ud.company_cid  , ud.identification_number  , ud.remark
		from sys_user u
		left join sys_dept d on u.dept_id = d.dept_id
		left join sys_user_detail ud on u.user_details_id = ud.user_details_id
		where u.del_flag = '0'
		<if test="userId != null and userId != 0">
			AND u.user_id = #{userId}
		</if>
		<if test="userName != null and userName != ''">
			AND u.user_name like concat('%', #{userName}, '%')
		</if>
		<if test="status != null and status != ''">
			AND u.status = #{status}
		</if>
		<if test="phonenumber != null and phonenumber != ''">
			AND u.phonenumber like concat('%', #{phonenumber}, '%')
		</if>
		<if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
			AND date_format(u.create_time,'%Y%m%d') &gt;= date_format(#{params.beginTime},'%Y%m%d')
		</if>
		<if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
			AND date_format(u.create_time,'%Y%m%d') &lt;= date_format(#{params.endTime},'%Y%m%d')
		</if>
		<if test="deptId != null and deptId != 0">
			AND (u.dept_id = #{deptId} OR u.dept_id IN ( SELECT t.dept_id FROM sys_dept t WHERE find_in_set(#{deptId}, ancestors) ))
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>
	
	<select id="selectAllocatedList" parameterType="SysUser" resultMap="SysUserResult">
	    select distinct u.user_id, u.dept_id, u.user_name, u.nick_name, u.email, u.phonenumber, u.status, u.create_time
	    from sys_user u
			 left join sys_dept d on u.dept_id = d.dept_id
			 left join sys_user_role ur on u.user_id = ur.user_id
			 left join sys_role r on r.role_id = ur.role_id
	    where u.del_flag = '0' and r.role_id = #{roleId}
	    <if test="userName != null and userName != ''">
			AND u.user_name like concat('%', #{userName}, '%')
		</if>
		<if test="phonenumber != null and phonenumber != ''">
			AND u.phonenumber like concat('%', #{phonenumber}, '%')
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>
	
	<select id="selectUnallocatedList" parameterType="SysUser" resultMap="SysUserResult">
	    select distinct u.user_id, u.dept_id, u.user_name, u.nick_name, u.email, u.phonenumber, u.status, u.create_time
	    from sys_user u
			 left join sys_dept d on u.dept_id = d.dept_id
			 left join sys_user_role ur on u.user_id = ur.user_id
			 left join sys_role r on r.role_id = ur.role_id
	    where u.del_flag = '0' and (r.role_id != #{roleId} or r.role_id IS NULL)
	    and u.user_id not in (select u.user_id from sys_user u inner join sys_user_role ur on u.user_id = ur.user_id and ur.role_id = #{roleId})
	    <if test="userName != null and userName != ''">
			AND u.user_name like concat('%', #{userName}, '%')
		</if>
		<if test="phonenumber != null and phonenumber != ''">
			AND u.phonenumber like concat('%', #{phonenumber}, '%')
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>
	
	<select id="selectUserByUserName" parameterType="String" resultMap="SysUserResult">
	    <include refid="selectUserVo"/>
		where u.user_name = #{userName} and u.del_flag = '0'
	</select>
	
	<select id="selectUserById" parameterType="Long" resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		where u.user_id = #{userId}
	</select>
	
	<select id="checkUserNameUnique" parameterType="String" resultMap="SysUserResult">
		select user_id, user_name from sys_user where user_name = #{userName} and del_flag = '0' limit 1
	</select>
	
	<select id="checkPhoneUnique" parameterType="String" resultMap="SysUserResult">
		select user_id, phonenumber from sys_user where phonenumber = #{phonenumber} and del_flag = '0' limit 1
	</select>
	
	<select id="checkEmailUnique" parameterType="String" resultMap="SysUserResult">
		select user_id, email from sys_user where email = #{email} and del_flag = '0' limit 1
	</select>

	<!--  获取最新的用户id	-->
	<select id="getNewId" resultType="long">
		select user_id
		from sys_user
		where del_flag = '0'
		order by user_id desc
		limit 1;
	</select>
	
	<insert id="insertUser" parameterType="SysUser" useGeneratedKeys="true" keyProperty="userId">
 		insert into sys_user(
 			<if test="userId != null and userId != 0">user_id,</if>
 			<if test="deptId != null and deptId != 0">dept_id,</if>
 			<if test="userName != null and userName != ''">user_name,</if>
 			<if test="nickName != null and nickName != ''">nick_name,</if>
 			<if test="email != null and email != ''">email,</if>
 			<if test="avatar != null and avatar != ''">avatar,</if>
 			<if test="phonenumber != null and phonenumber != ''">phonenumber,</if>
 			<if test="sex != null and sex != ''">sex,</if>
 			<if test="password != null and password != ''">password,</if>
 			<if test="status != null and status != ''">status,</if>
 			<if test="createBy != null and createBy != ''">create_by,</if>
 			<if test="remark != null and remark != ''">remark,</if>
 			<if test="userType != null and userType != ''">user_type,</if>
	     	<if test="subAccountFlag != null ">sub_account_flag,</if>
	     	<if test="supplierId != null and supplierId != ''">supplier_id,</if>
	     	<if test="userDetailsId != null and userDetailsId != ''">user_details_id,</if>
	     	<if test="expirationDate != null " >expiration_date,</if>
	     	<if test="parentUserId != null and parentUserId != ''">parent_user_id,</if>
	     	<if test="position != null and position != ''">position,</if>
 			create_time
 		)values(
 			<if test="userId != null and userId != ''">#{userId},</if>
 			<if test="deptId != null and deptId != ''">#{deptId},</if>
 			<if test="userName != null and userName != ''">#{userName},</if>
 			<if test="nickName != null and nickName != ''">#{nickName},</if>
 			<if test="email != null and email != ''">#{email},</if>
 			<if test="avatar != null and avatar != ''">#{avatar},</if>
 			<if test="phonenumber != null and phonenumber != ''">#{phonenumber},</if>
 			<if test="sex != null and sex != ''">#{sex},</if>
 			<if test="password != null and password != ''">#{password},</if>
 			<if test="status != null and status != ''">#{status},</if>
 			<if test="createBy != null and createBy != ''">#{createBy},</if>
 			<if test="remark != null and remark != ''">#{remark},</if>
 			<if test="userType != null and userType != ''">#{userType},</if>
		    <if test="subAccountFlag != null ">#{subAccountFlag},</if>
		    <if test="supplierId != null and supplierId != ''">#{supplierId},</if>
		    <if test="userDetailsId != null and userDetailsId != ''">#{userDetailsId},</if>
		    <if test="expirationDate != null">#{expirationDate},</if>
		    <if test="parentUserId != null and parentUserId != ''">#{parentUserId},</if>
		    <if test="position != null and position != ''">#{position},</if>
 			sysdate()
 		)
	</insert>

	<!--  供应商导入时批量添加用户 	-->
	<insert id="saveSysUser">
		insert into sys_user(
		dept_id,user_name,nick_name,email,avatar,phonenumber,
		password,
		status,
		create_by,
		remark,
		user_type,
	sub_account_flag,
		supplier_id,
		user_details_id,
		expiration_date,
		parent_user_id,
		position,
		create_time
		) values
		<foreach item="item" index="index" collection="list" separator=",">
			(#{item.deptId},
			#{item.userName},
			#{item.nickName},
			#{item.email},
			#{item.avatar},
			#{item.phonenumber},
			#{item.password},
			#{item.status},
			#{item.createBy},
			#{item.remark},
			#{item.userType},
			#{item.subAccountFlag},
			#{item.supplierId},
			#{item.userDetailsId},
			#{item.expirationDate},
			#{item.parentUserId},
			#{item.position},
			sysdate())
		</foreach>
	</insert>
	
	<update id="updateUser" parameterType="SysUser">
 		update sys_user
 		<set>
 			<if test="deptId != null and deptId != 0">dept_id = #{deptId},</if>
 			<if test="userName != null and userName != ''">user_name = #{userName},</if>
 			<if test="nickName != null and nickName != ''">nick_name = #{nickName},</if>
 			<if test="email != null ">email = #{email},</if>
 			<if test="phonenumber != null ">phonenumber = #{phonenumber},</if>
 			<if test="sex != null and sex != ''">sex = #{sex},</if>
 			<if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
 			<if test="password != null and password != ''">password = #{password},</if>
 			<if test="status != null and status != ''">status = #{status},</if>
 			<if test="loginIp != null and loginIp != ''">login_ip = #{loginIp},</if>
 			<if test="loginDate != null">login_date = #{loginDate},</if>
 			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
 			<if test="remark != null">remark = #{remark},</if>
 			update_time = sysdate()
 		</set>
 		where user_id = #{userId}
	</update>
	
	<update id="updateUserStatus" parameterType="SysUser">
 		update sys_user set status = #{status} where user_id = #{userId}
	</update>
	
	<update id="updateUserAvatar" parameterType="SysUser">
 		update sys_user set avatar = #{avatar} where user_name = #{userName}
	</update>
	
	<update id="resetUserPwd" parameterType="SysUser">
 		update sys_user set password = #{password} where user_name = #{userName}
	</update>
	
	<delete id="deleteUserById" parameterType="Long">
 		update sys_user set del_flag = '2' where user_id = #{userId}
 	</delete>
 	
 	<delete id="deleteUserByIds" parameterType="Long">
 		update sys_user set del_flag = '2' where user_id in
 		<foreach collection="array" item="userId" open="(" separator="," close=")">
 			#{userId}
        </foreach> 
 	</delete>
	
</mapper> 