<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.renxin.gauge.mapper.PsyOrderMapper">

    <resultMap type="com.renxin.gauge.domain.PsyOrder" id="PsyOrderResult">
        <result property="id" column="id"/>
        <result property="orderId" column="order_id"/>
        <result property="gaugeId" column="gauge_id"/>
        <result property="orderStatus" column="order_status"/>
        <result property="amount" column="amount"/>
        <result property="gaugeStatus" column="gauge_status"/>
        <result property="createTime" column="create_time"/>
        <result property="createBy" column="create_by"/>
        <result property="userId" column="user_id"/>
        <result property="sex" column="sex"/>
        <result property="age" column="age"/>
        <result property="mobile" column="mobile"/>
    </resultMap>

    <sql id="selectPsyOrderVo">
        select id,
               order_id,
               gauge_id,
               order_status,
               amount,
               gauge_status,
               create_time,
               create_by,
               user_id,
               sex,
               age,
               mobile,
               score
        from psy_order
    </sql>

    <select id="selectPsyOrderList" parameterType="com.renxin.gauge.domain.PsyOrder" resultMap="PsyOrderResult">
        <include refid="selectPsyOrderVo"/>
        <where>
            <if test="orderId != null  and orderId != ''">and order_id = #{orderId}</if>
            <if test="gaugeId != null ">and gauge_id = #{gaugeId}</if>
            <if test="orderStatus != null ">and order_status = #{orderStatus}</if>
            <if test="amount != null ">and amount = #{amount}</if>
            <if test="gaugeStatus != null ">and gauge_status = #{gaugeStatus}</if>
            <if test="createBy != null ">and create_by = #{createBy}</if>
            <if test="userId != null ">and user_id = #{userId}</if>
        </where>
    </select>

    <sql id="selectPsyOrder">
        select po.*,
               gauge.gauge_des as gaugeDes, gauge.type as gaugeType, gauge.title as gaugeTitle,gauge.head_picture,
               u.name as userName,gauge.gauge_num,gauge.gauge_score,gauge.wrong,gauge.radar,gauge.gauge_ratio
        from psy_order po
                 left join psy_gauge gauge ON po.gauge_id = gauge.id
                 left join psy_user u ON po.user_id = u.id
    </sql>

    <select id="selectPsyOrderById" parameterType="Integer" resultType="com.renxin.gauge.domain.PsyOrder">
        <include refid="selectPsyOrder"/>
        where po.id = #{id}
    </select>

    <select id="selectPsyOrderByOrderId" parameterType="String" resultType="com.renxin.gauge.domain.PsyOrder">
        <include refid="selectPsyOrder"/>
        where po.id = #{orderId}
    </select>

    <insert id="insertPsyOrder" parameterType="com.renxin.gauge.domain.PsyOrder" useGeneratedKeys="true"
            keyProperty="id">
        insert into psy_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderId != null and orderId != ''">order_id,</if>
            <if test="gaugeId != null">gauge_id,</if>
            <if test="orderStatus != null">order_status,</if>
            <if test="amount != null">amount,</if>
            <if test="gaugeStatus != null">gauge_status,</if>
            <if test="createTime != null">create_time,</if>
            <if test="createBy != null and createBy != ''">create_by,</if>
            <if test="userId != null">user_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderId != null and orderId != ''">#{orderId},</if>
            <if test="gaugeId != null">#{gaugeId},</if>
            <if test="orderStatus != null">#{orderStatus},</if>
            <if test="amount != null">#{amount},</if>
            <if test="gaugeStatus != null">#{gaugeStatus},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="createBy != null and createBy != ''">#{createBy},</if>
            <if test="userId != null">#{userId},</if>
        </trim>
    </insert>

    <update id="updatePsyOrder" parameterType="com.renxin.gauge.domain.PsyOrder">
        update psy_order
        <trim prefix="SET" suffixOverrides=",">
            <if test="orderId != null and orderId != ''">order_id = #{orderId},</if>
            <if test="gaugeId != null">gauge_id = #{gaugeId},</if>
            <if test="orderStatus != null">order_status = #{orderStatus},</if>
            <if test="amount != null">amount = #{amount},</if>
            <if test="gaugeStatus != null">gauge_status = #{gaugeStatus},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="createBy != null and createBy != ''">create_by = #{createBy},</if>
            <if test="score != null and score != ''">score = #{score},</if>
            <if test="resultUrl != null and resultUrl != ''">result_url = #{resultUrl},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="sex != null">sex = #{sex},</if>
            <if test="age != null">age = #{age},</if>
            <if test="mobile != null and mobile != ''">mobile = #{mobile},</if>
        </trim>

        <trim prefix="where" prefixOverrides="and">
            <if test="id != null">and id = #{id}</if>
            <if test="orderId != null">and order_id = #{orderId}</if>
        </trim>

    </update>

    <delete id="deletePsyOrderById" parameterType="Integer">
        delete
        from psy_order
        where id = #{id}
    </delete>

    <delete id="deletePsyOrderByIds" parameterType="String">
        delete from psy_order where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="queryOrderPage" resultType="com.renxin.gauge.domain.PsyOrder">
        select po.id, po.order_id as orderId, po.gauge_id as gaugeId, gauge.title as gaugeTitle,po.mobile,po.sex,po.age,
               po.order_status as orderStatus, po.amount, po.gauge_status as gaugeStatus, po.create_time as createTime, po.create_by as createBy,
               gauge.gauge_des as gaugeDes, gauge.type as gaugeType, gauge.gauge_num,gauge.head_picture as headPicture, gauge.subtitle as gaugeSubtitle,
               (select count(id) from psy_gauge_questions_result where order_id = po.id) as finishedNum
        from psy_order po left join psy_gauge gauge ON po.gauge_id = gauge.id
        <where>
            <if test="orderId != null  and orderId != ''">and po.order_id = #{orderId}</if>
            <if test="gaugeId != null ">and po.gauge_id = #{gaugeId}</if>
            <if test="orderStatus != null ">and po.order_status = #{orderStatus}</if>
            <if test="amount != null ">and po.amount = #{amount}</if>
            <if test="gaugeStatus != null ">and po.gauge_status = #{gaugeStatus}</if>
            <if test="createBy != null ">and po.create_by = #{createBy}</if>
            <if test="userId != null ">and po.user_id = #{userId}</if>
        </where>
         order by po.create_time DESC
    </select>

    <select id="getMyReportNum" resultType="java.lang.Integer">
        select count(1)
        from psy_order
        where user_id = #{userId}
          and gauge_status = 1
    </select>

    <select id="getOrderNumByGaugeId" resultType="java.lang.Integer">
        select count(1)
        from psy_order
        where gauge_id = #{gaugeId}
          and gauge_status = 1
    </select>

    <select id="queryOrderList" resultType="com.renxin.gauge.domain.PsyOrder">
        select po.id,po.order_id,po.gauge_id,po.order_status,po.amount,po.gauge_status,po.create_time,po.create_by,po.user_id,po.mobile,po.sex,po.age,
               gauge.title as gaugeTitle,pu.name as userName
        from psy_order po inner join psy_gauge gauge ON po.gauge_id = gauge.id
        left join psy_user pu ON po.user_id = pu.id
        <where>
            <if test="orderId != null  and orderId != ''"> and po.order_id like concat('%', #{orderId}, '%')</if>
            <if test="status != null "> and po.order_status = #{status}</if>
            <if test="userName != null  and userName != '' "> and pu.name like concat('%', #{userName}, '%')</if>
            <if test="lowAmount != null  and lowAmount != '' "> and po.amount <![CDATA[>=]]> #{lowAmount}</if>
            <if test="highAmount != null  and highAmount != '' "> and po.amount <![CDATA[<=]]> #{highAmount}</if>
        </where>
        order by po.create_time desc
    </select>

    <select id="getOrderByCancel" parameterType="com.renxin.gauge.domain.PsyOrder" resultMap="PsyOrderResult">
        <include refid="selectPsyOrderVo"/>
        <where>
            <if test="status != null">and order_status = #{status}</if>
            <if test="time != null ">and create_time <![CDATA[<=]]> #{time}</if>
        </where>
    </select>

    <update id="updatePsyOrderByOrderId"  parameterType="java.util.Map">
        update psy_order
        <trim prefix="SET" suffixOverrides=",">
            <if test="score != null">score = #{score},</if>
            <if test="resultUrl != null and resultUrl != ''">result_url = #{proposal},</if>
        </trim>

        <trim prefix="where" prefixOverrides="and">
            <if test="orderId != null">and order_id = #{orderId}</if>
        </trim>

    </update>
</mapper>