<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.renxin.course.mapper.CourCourseMapper">
    
    <resultMap type="CourCourse" id="CourCourseResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="type"    column="type"    />
        <result property="payType"    column="pay_type"    />
        <result property="author"    column="author"    />
        <result property="userName"    column="user_name"    />
        <result property="url"    column="url"    />
        <result property="iconUrl"    column="icon_url"    />
        <result property="price"    column="price"    />
        <result property="detail"    column="detail"    />
        <result property="onSale"    column="on_sale"    />
        <result property="serviceTo"    column="service_to"    />
<!--        <result property="createBy"    column="create_by"    />-->
<!--        <result property="createTime"    column="create_time"    />-->
<!--        <result property="updateTime"    column="update_time"    />-->
<!--        <result property="updateBy"    column="update_by"    />-->
    </resultMap>

    <sql id="selectCourCourseVo">
        select id, name, type, pay_type, author, user_name, url, icon_url, price, detail, on_sale, create_by, create_time, update_time, update_by,service_to from cour_course
    </sql>

    <select id="selectCourCourseList" parameterType="CourCourse" resultMap="CourCourseResult">
        <include refid="selectCourCourseVo"/>
        <where>
            delete_flag = 0
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="type != null "> and type = #{type}</if>
            <if test="payType != null "> and pay_type = #{payType}</if>
            <if test="author != null  and author != ''"> and author = #{author}</if>
            <if test="userName != null  and userName != ''"> and user_name = #{userName}</if>
            <if test="url != null  and url != ''"> and url = #{url}</if>
            <if test="iconUrl != null  and iconUrl != ''"> and icon_url = #{iconUrl}</if>
            <if test="price != null "> and price = #{price}</if>
            <if test="detail != null  and detail != ''"> and detail = #{detail}</if>
            <if test="onSale != null "> and on_sale = #{onSale}</if>
            <if test="serviceTo != null "> and service_to = #{serviceTo}</if>
        </where>
    </select>

    <select id="queryCourCourseList" parameterType="com.renxin.course.domain.dto.CourseQueryDTO" resultMap="CourCourseResult">
        <include refid="selectCourCourseVo"/>
        <where>
            delete_flag = 0
            <if test="lowPrice != null">
                and price <![CDATA[>=]]> #{lowPrice}
            </if>
            <if test="highPrice != null">
                and price <![CDATA[<=]]> #{highPrice}
            </if>
            <if test="nameValue != null  and nameValue != ''"> and name like concat('%', #{nameValue}, '%')</if>
            <if test="typeValue != null "> and type = #{typeValue}</if>
            <if test="userName != null and userName != ''"> and user_name = #{userName}</if>
            <if test="payTypeValue != null "> and pay_type = #{payTypeValue}</if>
            <if test="authorValue != null  and authorValue != ''"> and author like concat('%', #{authorValue}, '%')</if>
            <if test="onSaleValue != null "> and on_sale = #{onSaleValue}</if>
            <if test="serviceTo != null "> and service_to = #{serviceTo}</if>
        </where>
    </select>
    
    <select id="selectCourCourseById" parameterType="Long" resultMap="CourCourseResult">
        select cour.id, cour.name, cour.type, cour.pay_type, cour.author, cour.user_name, cour.url, cour.icon_url, cour.price, cour.detail, cour.on_sale, 
               cour.create_by, cour.create_time, cour.update_time, cour.update_by,cour.service_to ,
               (SELECT COUNT(DISTINCT user_id) AS learning_people_count
                FROM cour_user_course_section
                WHERE course_id = #{id}) as studyNum,
               COALESCE(section_info.section_count, 0) AS sectionCount,
               COALESCE(section_info.total_duration, 0) AS totalDuration
               
        from cour_course cour
          LEFT JOIN 
            (
                SELECT
                    course_id,
                    COUNT(*) AS section_count,
                    SUM(duration) AS total_duration
                FROM
                    cour_section
                WHERE
                    delete_flag = 0
                GROUP BY
                    course_id
            ) AS section_info ON cour.id = section_info.course_id

        where cour.id = #{id} and delete_flag = 0
    </select>

    <select id="selectCourCourseByType" parameterType="CourCourse" resultMap="CourCourseResult">
        <include refid="selectCourCourseVo"/>
        <where>
            <if test="type != null ">  type = #{typeId},</if>
            and delete_flag = 0
        </where>
    </select>

        
    <insert id="insertCourCourse" parameterType="CourCourse" useGeneratedKeys="true" keyProperty="id">
        insert into cour_course
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="type != null">type,</if>
            <if test="payType != null">pay_type,</if>
            <if test="author != null">author,</if>
            <if test="userName != null">user_name,</if>
            <if test="url != null">url,</if>
            <if test="iconUrl != null">icon_url,</if>
            <if test="price != null">price,</if>
            <if test="detail != null">detail,</if>
            <if test="onSale != null">on_sale,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="serviceTo != null">service_to,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="type != null">#{type},</if>
            <if test="payType != null">#{payType},</if>
            <if test="author != null">#{author},</if>
            <if test="userName != null">#{userName},</if>
            <if test="url != null">#{url},</if>
            <if test="iconUrl != null">#{iconUrl},</if>
            <if test="price != null">#{price},</if>
            <if test="detail != null">#{detail},</if>
            <if test="onSale != null">#{onSale},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="serviceTo != null">#{serviceTo},</if>
         </trim>
    </insert>

    <update id="updateCourCourse" parameterType="CourCourse">
        update cour_course
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="type != null">type = #{type},</if>
            <if test="payType != null">pay_type = #{payType},</if>
            <if test="author != null">author = #{author},</if>
            <if test="userName != null">user_name = #{userName},</if>
            <if test="url != null">url = #{url},</if>
            <if test="iconUrl != null">icon_url = #{iconUrl},</if>
            <if test="price != null">price = #{price},</if>
            <if test="detail != null">detail = #{detail},</if>
            <if test="onSale != null">on_sale = #{onSale},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="serviceTo != null">service_to = #{serviceTo},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteCourCourseById" >
        update cour_course set delete_flag = 1 where id = #{id}
    </delete>

    <delete id="deleteCourCourseByIds" parameterType="String">
        update cour_course set delete_flag = 1
        where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!--   判断课程是否已支付     -->
    <select id="getPaidCourseCount" resultType="Integer">
        select count(co.course_id)
        from cour_order co
        left join psy_order_pay pop
        on co.id = pop.order_id
        where pop.pay_status = 2 and co.course_id = #{courseId} and co.user_id = #{userId}
    </select>

    <select id="getCourseListByUserId"  resultMap="CourCourseResult">
        select distinct c.id, c.name, c.type, c.pay_type, c.author, c.url, c.icon_url, c.price, c.detail
        from cour_course c
        left join cour_user_course_section cucs
        on c.id = cucs.course_id
        where cucs.user_id = #{userId} and c.delete_flag = 0
    </select>

    <select id="getCourseListByClassId" parameterType="CourCourse" resultType="com.renxin.course.vo.CourseListVO">
        select sum(cs.duration) as total_duration ,count(cs.id)as section_num,c.*
        from cour_course c
        left join cour_section cs on c.id = cs.course_id

        <where>
            c.delete_flag = 0
            <if test="type != null ">  and c.type = #{type}</if>
            <if test="serviceTo != null "> and c.service_to = #{serviceTo}</if>
            <if test="onSale != null "> and c.on_sale = #{onSale}</if>
            <if test="idList != null and idList.size > 0">
                and c.id in
                <foreach collection="idList" open="(" close=")" separator="," item="id">
                    #{id}
                </foreach>
            </if>
        </where>
        GROUP BY c.id
    </select>
</mapper>