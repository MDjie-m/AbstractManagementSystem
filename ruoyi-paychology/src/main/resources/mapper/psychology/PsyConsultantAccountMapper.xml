<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.renxin.psychology.mapper.PsyConsultantAccountMapper">
    
    <resultMap type="PsyConsultantAccount" id="PsyConsultantAccountResult">
        <result property="consultantId"    column="consultant_id"    />
        <result property="accountNumber"    column="account_number"    />
        <result property="withdrawalPassword"    column="withdrawal_password"    />
        <result property="status"    column="status"    />
        <result property="amount"    column="amount"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectPsyConsultantAccountVo">
        select consultant_id, account_number, withdrawal_password, status, amount, del_flag, create_by, create_time, update_by, update_time from psy_consultant_account
    </sql>

    <select id="selectPsyConsultantAccountList" parameterType="PsyConsultantAccount" resultMap="PsyConsultantAccountResult">
        <include refid="selectPsyConsultantAccountVo"/>
        <where>  
            <if test="accountNumber != null  and accountNumber != ''"> and account_number = #{accountNumber}</if>
            <if test="withdrawalPassword != null  and withdrawalPassword != ''"> and withdrawal_password = #{withdrawalPassword}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="amount != null "> and amount = #{amount}</if>
            <if test="consultantId != null "> and consultant_id = #{consultantId}</if>
        </where>
    </select>
    
    <select id="selectPsyConsultantAccountByConsultantId" parameterType="Long" resultMap="PsyConsultantAccountResult">
        <include refid="selectPsyConsultantAccountVo"/>
        where consultant_id = #{consultantId}
    </select>
        
    <insert id="insertPsyConsultantAccount" parameterType="PsyConsultantAccount">
        insert into psy_consultant_account
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="consultantId != null">consultant_id,</if>
            <if test="accountNumber != null">account_number,</if>
            <if test="withdrawalPassword != null">withdrawal_password,</if>
            <if test="status != null">status,</if>
            <if test="amount != null">amount,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="consultantId != null">#{consultantId},</if>
            <if test="accountNumber != null">#{accountNumber},</if>
            <if test="withdrawalPassword != null">#{withdrawalPassword},</if>
            <if test="status != null">#{status},</if>
            <if test="amount != null">#{amount},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updatePsyConsultantAccount" parameterType="PsyConsultantAccount">
        update psy_consultant_account
        <trim prefix="SET" suffixOverrides=",">
            <if test="accountNumber != null">account_number = #{accountNumber},</if>
            <if test="withdrawalPassword != null">withdrawal_password = #{withdrawalPassword},</if>
            <if test="status != null">status = #{status},</if>
            <if test="amount != null">amount = #{amount},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where consultant_id = #{consultantId}
    </update>

    <delete id="deletePsyConsultantAccountByConsultantId" parameterType="Long">
        delete from psy_consultant_account where consultant_id = #{consultantId}
    </delete>

    <delete id="deletePsyConsultantAccountByConsultantIds" parameterType="String">
        delete from psy_consultant_account where consultant_id in 
        <foreach item="consultantId" collection="array" open="(" separator="," close=")">
            #{consultantId}
        </foreach>
    </delete>

    <insert id="initAccount">
        insert into psy_consultant_account (consultant_id,withdrawal_password, status, create_by,create_time,update_by,update_time)
        SELECT id as consultant_id,'123456' as withdrawal_password,'1' as status,'admin' as create_by, create_time,'admin' as update_by, update_time
        FROM psy_consult t
        where not exists (
        SELECT id
        FROM psy_consultant_account t2
        WHERE t2.consultant_id = t.id
        )
    </insert>
</mapper>