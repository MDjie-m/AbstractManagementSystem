<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.renxin.psychology.mapper.PsyConsultantAccountRecordMapper">
    
    <resultMap type="PsyConsultantAccountRecord" id="PsyConsultantAccountRecordResult">
        <result property="recordId"    column="record_id"    />
        <result property="consultantId"    column="consultant_id"    />
        <result property="status"    column="status"    />
        <result property="payType"    column="pay_type"    />
        <result property="billItemId"    column="bill_item_id"    />
        <result property="accountAmount"    column="account_amount"    />
        <result property="payAmount"    column="pay_amount"    />
        <result property="payMessage"    column="pay_message"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
 
        <result property="cardNumber"    column="card_number"    />
        <result property="cardUserName"    column="card_user_name"    />
        <result property="bankName"    column="bank_name"    />
        <result property="branchName"    column="branch_name"    />
        <result property="scheduleType"    column="schedule_type"    />
        <result property="payUserId"    column="pay_user_id"    />
        <result property="payUserType"    column="pay_user_type"    />
        <result property="payAndChargeNum"    column="pay_and_charge_num"    />
    </resultMap>

    <sql id="selectPsyConsultantAccountRecordVo">
        select record_id, consultant_id, status, pay_type, bill_item_id, account_amount, pay_amount, pay_message, del_flag, create_by, create_time, update_by, update_time from psy_consultant_account_record
    </sql>

    <select id="selectPsyConsultantAccountRecordList" parameterType="PsyConsultantAccountRecord" resultMap="PsyConsultantAccountRecordResult">
        select
        red.record_id, red.consultant_id, red.status, red.pay_type, red.bill_item_id, red.account_amount, red.pay_amount, red.pay_message,
               red.create_by, red.create_time, red.update_by, red.update_time , 
               bItem.schedule_type, bItem.pay_user_id, bItem.pay_user_type, bItem.pay_and_charge_num, 
               team.title as serverTitle
        from psy_consultant_account_record red
            left join psy_consult_bill_item bItem on red.bill_item_id = bItem.id
            left join psy_consultant_team_supervision team on bItem.team_id = team.id

        <where>  
            red.del_flag = 0 
            <if test="consultantId != null "> and red.consultant_id = #{consultantId}</if>
            <if test="status != null  and status != ''"> and red.status = #{status}</if>
            <if test="payType != null  and payType != ''"> and red.pay_type = #{payType}</if>
            <if test="billItemId != null  and billItemId != ''"> and red.bill_item_id = #{billItemId}</if>
            <if test="accountAmount != null  and accountAmount != ''"> and red.account_amount = #{accountAmount}</if>
            <if test="payAmount != null "> and red.pay_amount = #{payAmount}</if>
            <if test="payMessage != null  and payMessage != ''"> and red.pay_message = #{payMessage}</if>
             <if test="createTimeStart != null and createTimeStart != '' and createTimeEnd != null and createTimeStart != ''">
                 and red.create_time between #{createTimeStart} and concat(#{createTimeEnd},' 23:59:59')
             </if>
        </where>
        order by red.update_time desc
    </select>


    
    <select id="calcDrawList" resultType="com.renxin.psychology.domain.PsyConsultantAccountRecord">
        SELECT
            main.consultant_id,
            main.payAmount,
            card.card_number,
            card.bank_name,
            card.branch_name,
            card.card_user_name
        FROM
            (
            SELECT
                re.consultant_id,
                SUM(re.pay_amount) AS payAmount
            FROM psy_consultant_account_record re
            WHERE 1=1
                <if test="payType != null  and payType != ''">
                    AND re.pay_type = #{payType}
                </if>
                <if test="createTimeStart != null and createTimeStart != '' and createTimeEnd != null and createTimeStart != ''">
                    AND re.create_time BETWEEN #{createTimeStart} AND concat(#{createTimeEnd}, ' 23:59:59')
                </if>
            GROUP BY re.consultant_id
            ) main
        LEFT JOIN psy_consultant_debitcard card ON card.consultant_id = main.consultant_id AND card.is_default = 0;
    </select>

    

    <select id="selectPsyConsultantAccountRecordByRecordId" parameterType="Long" resultMap="PsyConsultantAccountRecordResult">
        <include refid="selectPsyConsultantAccountRecordVo"/>
        where record_id = #{recordId}
    </select>
    
    
    <insert id="insertPsyConsultantAccountRecord" parameterType="PsyConsultantAccountRecord">
        insert into psy_consultant_account_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="recordId != null">record_id,</if>
            <if test="consultantId != null">consultant_id,</if>
            <if test="status != null">status,</if>
            <if test="payType != null">pay_type,</if>
            <if test="billItemId != null">bill_item_id,</if>
            <if test="accountAmount != null">account_amount,</if>
            <if test="payAmount != null">pay_amount,</if>
            <if test="payMessage != null">pay_message,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="recordId != null">#{recordId},</if>
            <if test="consultantId != null">#{consultantId},</if>
            <if test="status != null">#{status},</if>
            <if test="payType != null">#{payType},</if>
            <if test="billItemId != null">#{billItemId},</if>
            <if test="accountAmount != null">#{accountAmount},</if>
            <if test="payAmount != null">#{payAmount},</if>
            <if test="payMessage != null">#{payMessage},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>
    <insert id="insertPsyConsultantAccountRecordBatch" parameterType="list">
        insert into psy_consultant_account_record (
            record_id,
            consultant_id,
            status,
            pay_type,
            bill_item_id,
            account_amount,
            pay_amount,
            pay_message,
            del_flag,
            create_by,
            create_time,
            update_by,
            update_time
        ) values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.recordId},
            #{item.consultantId},
            #{item.status},
            #{item.payType},
            #{item.billItemId},
            #{item.accountAmount},
            #{item.payAmount},
            #{item.payMessage},
            #{item.delFlag},
            #{item.createBy},
            #{item.createTime},
            #{item.updateBy},
            #{item.updateTime}
            )
        </foreach>
    </insert>

    <update id="updatePsyConsultantAccountRecord" parameterType="PsyConsultantAccountRecord">
        update psy_consultant_account_record
        <trim prefix="SET" suffixOverrides=",">
            <if test="consultantId != null">consultant_id = #{consultantId},</if>
            <if test="status != null">status = #{status},</if>
            <if test="payType != null">pay_type = #{payType},</if>
            <if test="billItemId != null">bill_item_id = #{billItemId},</if>
            <if test="accountAmount != null">account_amount = #{accountAmount},</if>
            <if test="payAmount != null">pay_amount = #{payAmount},</if>
            <if test="payMessage != null">pay_message = #{payMessage},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where record_id = #{recordId}
    </update>

    <delete id="deletePsyConsultantAccountRecordByRecordId" parameterType="Long">
        delete from psy_consultant_account_record where record_id = #{recordId}
    </delete>

    <delete id="deletePsyConsultantAccountRecordByRecordIds" parameterType="String">
        delete from psy_consultant_account_record where record_id in 
        <foreach item="recordId" collection="array" open="(" separator="," close=")">
            #{recordId}
        </foreach>
    </delete>
</mapper>